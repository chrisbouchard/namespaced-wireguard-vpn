#!/usr/bin/env bash

set -o xtrace

die() {
    echo "${BASH_SOURCE[1]}: line ${BASH_LINENO[0]}: ${FUNCNAME[1]}: ${1:-Died}" >&2
    exit 1
}

netns_names=($NETNS_NAME)
wg_names=($WIREGUARD_NAME)
wg_private_keys=($WIREGUARD_PRIVATE_KEY)
wg_vpn_public_keys=($WIREGUARD_VPN_PUBLIC_KEY)
wg_endpoints=($WIREGUARD_ENDPOINT)

case "$1" in
    up)
        pre_netns=""
        allowed_ips="0.0.0.0/0,::0/0"
        mtu="$WIREGUARD_INITIAL_MTU"
        for (( i=0; i<${#netns_names[*]}; ++i))
        do
            ip $pre_netns link add "${wg_names[$i]}" mtu $mtu type wireguard || die
            # reduction for worse-case scenario of IPv6
            mtu=$(($mtu - 80)) 

            if [ $(( $i + 1 )) -eq ${#netns_names[*]} ]
            then
                allowed_ips="$WIREGUARD_ALLOWED_IPS"
            fi

            ip $pre_netns link set "${wg_names[$i]}" netns "${netns_names[$i]}" || die

            ip netns exec "${netns_names[$i]}" wg set "${wg_names[$i]}" \
                private-key <(echo "${wg_private_keys[$i]}") \
                peer "${wg_vpn_public_keys[$i]}" \
                    endpoint "${wg_endpoints[$i]}" \
                    allowed-ips "$allowed_ips" || die


            # Addresses are comma-separated, so to split them.
            tr ',' '\n' <<<"$WIREGUARD_IP_ADDRESSES" |
                xargs -I '{}' \
                    ip -n "${netns_names[$i]}" address add '{}' dev "${wg_names[$i]}" || die

            ip -n "${netns_names[$i]}" link set "${wg_names[$i]}" up || die

            # Add default routes for IPv4 and IPv6
            ip -n "${netns_names[$i]}" -4 route add default dev "${wg_names[$i]}" || die
            if ip -o -6 -a | grep "${wg_names[$i]}"
            then
                ip -n "${netns_names[$i]}" -6 route add default dev "${wg_names[$i]}" || die
            fi
            pre_netns="-n ${netns_names[$i]}"
        done
        ;;
    down)
        # We need to delete the WireGuard interface. It's initially created in
        # the init network namespace, then moved to the VPN namespace.
        # Depending how well the "up" operation went, it might be in either.
        for (( i=$((${#netns_names[*]} - 1)); i>=0; --i))
        do
            ip -n "${netns_names[$i]}" link delete "${wg_names[$i]}" ||
                ip link delete "${wg_names[$i]}" || die
        done
        ;;
esac

